{"version":3,"file":"static/js/67.d77b13c7.chunk.js","mappings":"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","sources":["services/axios/generic.js","services/axios/app.js","components/aside-menu/AsideMenu.jsx","components/message-window/message-window-comps/mw-header/mw-header.jsx","components/message-window/message-window-comps/mw-text/mw-text.jsx","components/message-window/message-window-comps/mw-filer/mw-filer.jsx","components/message-window/message-window-comps/mw-capture/mw-capture.jsx","components/message-window/MessageWindow.jsx","components/header/AppHeader.jsx","components/footer/AppFooter.jsx","components/buttons/refresh/BtnRefresh.jsx","components/buttons/close/BtnClose.jsx","components/tracker/TrackerPanel.jsx","components/buttons/triangle/post-menu/PostMenu.jsx","components/board/board-header/board-header-btn/BoardHeaderBtn.jsx","components/board/board-header/BoardHeader.jsx","components/buttons/scroll-page-btns/ScrollPageBtns.jsx","components/draggable/Draggable.jsx","components/media-view/MediaView.jsx","components/message-window/message-window-movable/MessageWindowMovable.jsx","components/alerts/Alerts.jsx","components/containers/alerts-cont/AlertsCont.jsx","views/board/Board.jsx"],"sourcesContent":["import axios from \"axios\"\n\nconst url = \"http://localhost:7000/api\"\naxios.interceptors.request.use(function (config) {\n  //config.headers[\"Bypass-Tunnel-Reminder\"] = \"123\" //для localtunnel\n     if (config.method === \"post\") { console.log(config) }\n  return config\n}, function (error) {\n  return Promise.reject(error)\n})\n\n\nconst request = async (method, itemUrl, data) => {\n  try {\n    let response = await axios[method](`${url}/${itemUrl}`, data)\n    return response\n  } catch (error) {\n    console.log(error)\n  }\n}\nexport default request","import request from \"./generic\"\nimport axios from \"axios\"\n\nconst url = \"http://localhost:7000/api\"\nclass AppReq {\n    async getAllThreadsOnBoard(boardName, offset = 0, limit = 10) {\n        try {\n            console.log(offset)\n            const items = await request(\"get\", \"threads\", {\n                params: {\n                    boardName: boardName.replace('/', ''),\n                    offset: offset * limit,\n                    limit: limit\n                }\n            })\n            return items.data\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    async getThread(id, boardName) {\n        try {\n            const item = await request(\"get\", `threads/${id}?boardName=${boardName}`)\n            return item.data\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    async refreshThread(id, lastPost) {\n        try {\n            const posts = await request(\"get\", `app/${id}?lastpost=${lastPost}`)\n            return posts.data\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    async getPost(id) {\n        try {\n            const post = await request(\"get\", `posts/${id}`)\n            console.log(post)\n            return post\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    async createPost(message) {\n        try {\n            let response\n            if (message.mediaFiles.length > 0) {\n                let formData = new FormData()\n                formData.append('message', JSON.stringify(message.message))\n                message.mediaFiles.forEach(element => {\n                    formData.append(\"mediaFiles\", element, element.name)\n                })\n                response = await axios({\n                    method: \"post\",\n                    url: `${url}/posts`,\n                    data: formData,\n                    headers: { \"Content-Type\": `multipart/form-data;` },\n                })\n                return response\n            } else {\n                response = await request(\"post\", \"posts\", message)\n            }\n            return response\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    async createThread(message) {\n        try {\n            let response\n            if (message.mediaFiles.length > 0) {\n                let formData = new FormData()\n                formData.append('message', JSON.stringify(message.message))\n                message.mediaFiles.forEach(element => {\n                    formData.append(\"mediaFiles\", element, element.name)\n                })\n                response = await axios({\n                    method: \"post\",\n                    url: `${url}/threads`,\n                    data: formData,\n                    headers: { \"Content-Type\": `multipart/form-data;` },\n                })\n            } else {\n                response = await request(\"post\", \"threads\", message)\n            }\n            return response\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    async trackerPanelCount(threads) {\n        try {\n            let resp = await request(\"get\", `favorite/?threads=${threads}`)\n            return resp\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    async trackerPanelUpdateCount(threadId, lastPost) {\n        try {\n            let resp = await request(\"get\", `tracker/${threadId}?lastpost=${lastPost}`)\n            return resp\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\nexport default AppReq","import { Link } from \"react-router-dom\"\nimport './aside.scss'\nimport { useSelector } from 'react-redux'\n\nfunction AsideMenu() {\n    const asideIsOpen = useSelector(state => state.appState.asideIsOpen)\n    let asideInnerState = JSON.parse(localStorage.getItem(\"asideInnerState\")) || {\"0\":\"1\",\"1\":\"1\",\"2\":\"1\",\"3\":\"1\",\"4\":\"1\",\"5\":\"1\",\"6\":\"1\"}\n\n    function showHide(pointer) {\n        let elem = document.getElementsByClassName('aside__menu-item')[pointer].children[1]\n        asideInnerState[`${pointer}`] = asideInnerState[`${pointer}`] === \"1\" ? \"0\" : \"1\"\n        localStorage.setItem(\"asideInnerState\", JSON.stringify(asideInnerState))\n        let elemStyle = getComputedStyle(elem).display\n        if (elemStyle === \"none\") {\n            elem.style.display = \"block\"\n        } else {\n            elem.style.display = \"none\"\n        }\n    }\n\n    return (\n        < aside id=\"aside\" className=\"aside\" style={{ display: asideIsOpen ? \"block\" : \"none\" }}>\n            <ul className=\"aside__menu\">\n                <li className=\"aside__menu-item\">\n                    <div className=\"aside__menu-item-header\" onClick={() => showHide(0)}>Разное</div>\n                    <ul className=\"aside__menu-item-submenu\" style={{ display: asideInnerState[0] === \"1\" ? \"block\" : \"none\" }}>\n                        <li><Link to=\"/board/b\">/b/ - бред</Link></li>\n                        <li><Link to=\"/board/o\">/o/ - оэкаки</Link></li>\n                        <li><Link to=\"/board/soc\">/soc/ - общение</Link></li>\n                        <li><Link to=\"/board/media\">/media/ - анимация</Link></li>\n                        <li><Link to=\"/board/r\">/r/ - просьбы</Link></li>\n                        <li><Link to=\"/board/api\">/api/ - API</Link></li>\n                        <li><Link to=\"/board/rf\">/rf/ - убежище</Link></li>\n                    </ul>\n                </li>\n                <li className=\"aside__menu-item\">\n                    <div className=\"aside__menu-item-header\" onClick={() => showHide(1)}>Политика</div>\n                    <ul className=\"aside__menu-item-submenu\" style={{ display: asideInnerState[1] === \"1\" ? \"block\" : \"none\" }}>\n                        <li><Link to=\"/board/int\">/int/ - international</Link></li>\n                        <li><Link to=\"/board/po\">/po/ - политика</Link></li>\n                        <li><Link to=\"/board/news\">/news/ - новости</Link></li>\n                        <li><Link to=\"/board/hry\">/hry/ - х р ю</Link></li>\n                    </ul>\n                </li>\n\n                <li className=\"aside__menu-item\">\n                    <div className=\"aside__menu-item-header\" onClick={() => showHide(2)}>Тематика</div>\n                    <ul className=\"aside__menu-item-submenu\" style={{ display: asideInnerState[2] === \"1\" ? \"block\" : \"none\" }}>\n                        <li><Link to=\"/board/au\">/au/ - автомобили и транспорт</Link></li>\n                        <li><Link to=\"/board/bi\">/bi/ - велосипеды</Link></li>\n                        <li><Link to=\"/board/biz\">/biz/ - бизнес</Link></li>\n                        <li><Link to=\"/board/bo\">/bo/ - книги</Link></li>\n                        <li><Link to=\"/board/c\">/c/ - комиксы и мультфильмы</Link></li>\n                        <li><Link to=\"/board/em\">/em/ - другие страны и туризм</Link></li>\n                        <li><Link to=\"/board/fa\">/fa/ - мода и стиль</Link></li>\n                        <li><Link to=\"/board/fiz\">/fiz/ - физкультура</Link></li>\n                        <li><Link to=\"/board/fl\">/fl/ - иностранные языки</Link></li>\n                        <li><Link to=\"/board/ftb\">/ftb/ - футбол</Link></li>\n                        <li><Link to=\"/board/hh\">/hh/ - hip-hop</Link></li>\n                        <li><Link to=\"/board/hi\">/hi/ - история</Link></li>\n                        <li><Link to=\"/board/me\">/me/ - медицина</Link></li>\n                        <li><Link to=\"/board/mg\">/mg/ - магия</Link></li>\n                        <li><Link to=\"/board/mlp\">/mlp/ - my little pony</Link></li>\n                        <li><Link to=\"/board/mo\">/mo/ - мотоциклы</Link></li>\n                        <li><Link to=\"/board/mov\">/mov/ - Фильмы</Link></li>\n                        <li><Link to=\"/board/mu\">/mu/ - музыка</Link></li>\n                        <li><Link to=\"/board/ne\">/ne/ - животные и природа</Link></li>\n                        <li><Link to=\"/board/psy\">/psy/ - психология</Link></li>\n                        <li><Link to=\"/board/re\">/re/ - религия</Link></li>\n                        <li><Link to=\"/board/sci\">/sci/ - наука</Link></li>\n                        <li><Link to=\"/board/sf\">/sf/ - научная фантастика</Link></li>\n                        <li><Link to=\"/board/sn\">/sn/ - паранормальные явления</Link></li>\n                        <li><Link to=\"/board/sp\">/sp/ - спорт</Link></li>\n                        <li><Link to=\"/board/spc\">/spc/ - космос и астрономия</Link></li>\n                        <li><Link to=\"/board/tv\">/tv/ - тв и кино</Link></li>\n                        <li><Link to=\"/board/un\">/un/ - образование</Link></li>\n                        <li><Link to=\"/board/w\">/w/ - оружие</Link></li>\n                        <li><Link to=\"/board/wh\">/wh/ - warhammer</Link></li>\n                        <li><Link to=\"/board/wm\">/wm/ - военная техника и оружие</Link></li>\n                        <li><Link to=\"/board/wp\">/wp/ - обои и высокое разрешение</Link></li>\n                        <li><Link to=\"/board/zog\">/zog/ - теории заговора</Link></li>\n                    </ul>\n                </li>\n\n                <li className=\"aside__menu-item\">\n                    <div className=\"aside__menu-item-header\" onClick={() => showHide(3)}>Творчество</div>\n                    <ul className=\"aside__menu-item-submenu\" style={{ display: asideInnerState[3] === \"1\" ? \"block\" : \"none\" }}>\n                        <li><Link to=\"/board/de\">/de/ - дизайн</Link></li>\n                        <li><Link to=\"/board/di\">/di/ - столовая</Link></li>\n                        <li><Link to=\"/board/diy\">/diy/ - хобби</Link></li>\n                        <li><Link to=\"/board/izd\">Графомания</Link></li>\n                        <li><Link to=\"/board/mus\">/mus/ - музыканты</Link></li>\n                        <li><Link to=\"/board/pa\">/pa/ - живопись</Link></li>\n                        <li><Link to=\"/board/p\">/p/ - фото</Link></li>\n                        <li><Link to=\"/board/wrk\">/wrk/ - РАБота и карьера</Link></li>\n                        <li><Link to=\"/board/trv\">/trv/ - путешествия</Link></li>\n                    </ul>\n                </li>\n\n                <li className=\"aside__menu-item\">\n                    <div className=\"aside__menu-item-header\" onClick={() => showHide(4)}>Техника и софт</div>\n                    <ul className=\"aside__menu-item-submenu\" style={{ display: asideInnerState[4] === \"1\" ? \"block\" : \"none\" }}>\n                        <li><Link to=\"/board/gd\">/gd/ - gamedev</Link></li>\n                        <li><Link to=\"/board/hw\">/hw/ - компьютерное железо</Link></li>\n                        <li><Link to=\"/board/mobi\">/mobi/ - мобильные устройства и приложения</Link></li>\n                        <li><Link to=\"/board/pr\">/pr/ - программирование</Link></li>\n                        <li><Link to=\"/board/ra\">/ra/ - радиотехника</Link></li>\n                        <li><Link to=\"/board/s\">/s/ - программы</Link></li>\n                        <li><Link to=\"/board/t\">/t/ - техника</Link></li>\n                        <li><Link to=\"/board/web\">/web/ - веб-мастера</Link></li>\n                    </ul>\n                </li>\n                <li className=\"aside__menu-item\">\n                    <div className=\"aside__menu-item-header\" onClick={() => showHide(5)}>Игры</div>\n                    <ul className=\"aside__menu-item-submenu\" style={{ display: asideInnerState[5] === \"1\" ? \"block\" : \"none\" }}>\n                        <li><Link to=\"/board/bg\">/bg/ - настольные игры</Link></li>\n                        <li><Link to=\"/board/cg\">/cg/ - консоли</Link></li>\n                        <li><Link to=\"/board/gsg\">/gsg/ - grand strategy games</Link></li>\n                        <li><Link to=\"/board/ruvn\">/ruvn/ - российские визуальные новеллы</Link></li>\n                        <li><Link to=\"/board/tes\">/tes/ - the elder scrolls</Link></li>\n                        <li><Link to=\"/board/v\">/v/ - video games</Link></li>\n                        <li><Link to=\"/board/vg\">/vg/ - video games general</Link></li>\n                        <li><Link to=\"/board/wr\">/wr/ - текстовые авторские рпг</Link></li>\n                    </ul>\n                </li>\n\n                <li className=\"aside__menu-item\">\n                    <div className=\"aside__menu-item-header\" onClick={() => showHide(6)}>Японская культура</div>\n                    <ul className=\"aside__menu-item-submenu\" style={{ display: asideInnerState[6] === \"1\" ? \"block\" : \"none\" }} id=\"fm__weeaboo\">\n                        <li><Link to=\"/board/a\">/a/ - аниме</Link></li>\n                        <li><Link to=\"/board/fd\">/fd/ - фэндом</Link></li>\n                        <li><Link to=\"/board/ja\">/ja/ - японская культура</Link></li>\n                        <li><Link to=\"/board/ma\">/ma/ - манга</Link></li>\n                        <li><Link to=\"/board/vn\">/vn/ - визуальные новеллы</Link></li>\n                    </ul>\n                </li>\n            </ul>\n        </aside >\n    )\n}\n\nexport default AsideMenu\n","import { useSelector, useDispatch } from \"react-redux\"\nimport { setTextInput, setFilesInput, setCaptureInput, setOptionInput, clearFilesInput } from '../../../../store/states/messageWindowState'\nimport { addAlert, updateAlert, deleteAlert } from '../../../../store/states/alertsState'\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport AppReq from \"../../../../services/axios/app\";\n\nfunction MWHeader(props) {\n    const path = useParams()\n    const navigation = useNavigate()\n    const disp = useDispatch()\n    const captureAnswer = 714120\n    const splitPath = Object.values(path)[0].split('/')\n    const optionInput = useSelector(state => state.messageWindowState.optionInput)\n    const threadId = useSelector(state => state.messageWindowState.threadId)\n    const filesInput = useSelector(state => state.messageWindowState.filesInput)\n    const textInput = useSelector(state => state.messageWindowState.textInput)\n    const captureInput = useSelector(state => state.messageWindowState.captureInput)\n\n    async function createPostOrThread(method) {\n        let req = new AppReq()\n        let resp = await req[method]({\n            message: {\n                userName: optionInput,\n                ThreadId: threadId,\n                text: textInput,\n                IP: \"123.321.123.321\",\n                boardName: splitPath[0]\n            },\n            mediaFiles: filesInput\n        })\n        return resp\n    }\n\n    async function submitHandler() {\n        let alertId = \"mwHeader\"\n        if (captureAnswer == captureInput) {\n            let resp\n            disp(addAlert([alertId, \"Отправляю...\"]))\n            if (props.isMessage) {\n                resp = await createPostOrThread(\"createPost\")\n            } else {\n                resp = await createPostOrThread(\"createThread\")\n            }\n            if (resp.status === 201) {\n                disp(updateAlert([alertId, \"Успешно отправлено!\"]))\n                sessionStorage.setItem(\"textInput\", \"\")\n                disp(setTextInput(\"\"))\n                disp(clearFilesInput())\n                //disp(setCaptureInput(\"\"))\n                if (splitPath.length === 1) {\n                    props.isMessage ? navigation(\"/board/\" + splitPath[0] + \"/\" + threadId) : navigation(\"/board/\" + splitPath[0] + \"/\" + resp.data.ThreadId)\n                }\n            } else {\n                disp(updateAlert([alertId, \"Что-то пошло не так!\"]))\n            }\n            setTimeout(() => disp(deleteAlert(alertId)), 2000)\n        } else {\n            addAlert([alertId, \"Капча введена неверно!\"])\n            setTimeout(() => disp(deleteAlert(alertId)), 2000)\n        }\n    }\n\n    return (\n        <div className=\"message-window__header\">\n            <input autoComplete=\"off\" type=\"text\" className=\"message-window__header-input input\" size=\"10\" name=\"0\" placeholder=\"опции\" value={optionInput} onChange={\n                (e) => disp(setOptionInput(e.target.value))} />\n            <button className=\"message-window__header-submit button\" onClick={() => submitHandler()} >Отправить</button>\n        </div>\n    )\n}\n\nexport default MWHeader","import { useSelector, useDispatch } from \"react-redux\"\nimport { setTextInput } from '../../../../store/states/messageWindowState'\n\nfunction MWText(props) {\n    const disp = useDispatch()\n    const textSymbolCounter = 15000\n    const textInput = useSelector(state => state.messageWindowState.textInput)\n\n    function doAddTags(tag1, tag2) {\n        let ToolbarTextarea = document.getElementById(props.mwId + \"-ta\")\n        if (document.selection) {\n            let sel = document.selection.createRange()\n            sel.text = tag1 + sel.text + tag2\n        }\n        else {\n            let len = ToolbarTextarea.value.length\n            let start = ToolbarTextarea.selectionStart\n            let end = ToolbarTextarea.selectionEnd\n            let scrollTop = ToolbarTextarea.scrollTop\n            let scrollLeft = ToolbarTextarea.scrollLeft\n            let sel = ToolbarTextarea.value.substring(start, end)\n            let rep = tag1 + sel + tag2\n\n            ToolbarTextarea.value = ToolbarTextarea.value.substring(0, start) + rep + ToolbarTextarea.value.substring(end, len)\n            ToolbarTextarea.scrollTop = scrollTop\n            ToolbarTextarea.scrollLeft = scrollLeft\n            ToolbarTextarea.focus()\n            ToolbarTextarea.setSelectionRange(start + tag1.length, end + tag1.length)\n        }\n        disp(setTextInput(ToolbarTextarea.value))\n        ToolbarTextarea.dispatchEvent(new Event(\"keyup\"))\n    }\n\n    return (\n        <>\n            <div className=\"message-window__text-form\">\n                <textarea id={props.mwId + \"-ta\"} name=\"1\" className=\"message-window__text-form-input input\" tabIndex=\"3\" rows=\"10\" placeholder=\"Комментарий. Макс. длина 15000\" value={textInput} onChange={\n                    (e) => disp(setTextInput(e.target.value))} />\n                <span className=\"message-window__text-form-len\">{textSymbolCounter - textInput.length}</span>\n            </div>\n            <div className=\"message-window__text-btns\">\n                <button className=\"message-window__text-btn message-window__text-btn-type-b\" type=\"button\" onClick={() => doAddTags('[b]', '[/b]')}><strong>B</strong></button>\n                <button className=\"message-window__text-btn message-window__text-btn-type-i\" type=\"button\" onClick={() => doAddTags('[i]', '[/i]')}><em>I</em></button>\n                <button className=\"message-window__text-btn message-window__text-btn-type-q\" type=\"button\" onClick={() => doAddTags('>', '')}>&gt;</button>\n                <button className=\"message-window__text-btn message-window__text-btn-type-u\" type=\"button\" onClick={() => doAddTags('[u]', '[/u]')}><span className=\"u\">U</span></button>\n                <button className=\"message-window__text-btn message-window__text-btn-type-o\" type=\"button\" onClick={() => doAddTags('[o]', '[/o]')}><span className=\"o\">O</span></button>\n                <button className=\"message-window__text-btn message-window__text-btn-type-sp\" type=\"button\" onClick={() => doAddTags('[spoiler]', '[/spoiler]')}><span className=\"spoiler\">??</span></button>\n                <button className=\"message-window__text-btn message-window__text-btn-type-s\" type=\"button\" onClick={() => doAddTags('[s]', '[/s]')}><span className=\"s\">S</span></button>\n                <button className=\"message-window__text-btn\" type=\"button\" onClick={() => doAddTags('[sup]', '[/sup]')}>A<sup>a</sup></button>\n                <button className=\"message-window__text-btn\" type=\"button\" onClick={() => doAddTags('[sub]', '[/sub]')}>A<sub>a</sub></button>\n            </div>\n        </>\n    )\n}\n\nexport default MWText","import \"./mwf.scss\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { setFilesInput, setIsFilesLoaded, deleteFile } from '../../../../store/states/messageWindowState'\nimport { addAlert, updateAlert, deleteAlert } from '../../../../store/states/alertsState'\n\nfunction MWFiler(props) {\n  const disp = useDispatch()\n  const filesInput = useSelector(state => state.messageWindowState.filesInput)\n  const filesIsLoaded = useSelector(state => state.messageWindowState.isFilesLoaded)\n\n  const filesTypes = {\n    \"89504e47\": \"image/png\",\n    \"47494638\": \"image/gif\",\n    \"ffd8ffe0\": \"image/jpeg\",\n    \"ffd8ffe1\": \"image/jpeg\",\n    \"ffd8ffe2\": \"image/jpeg\",\n    \"ffd8ffe3\": \"image/jpeg\",\n    \"ffd8ffe8\": \"image/jpeg\",\n    \"1a45dfa3\": \"video/webm\",\n    \"0001c\": \"video/mp4\",\n    \"00020\": \"video/mp4\",\n    \"00018\": \"video/mp4\",\n  }\n\n  async function addFiles(e) {\n    let alertId = \"mbFiler\"\n    if (!filesIsLoaded || filesInput.length > 4) {\n      disp(addAlert([alertId, !filesIsLoaded ? \"Другой файл грузится\" : \"Лимит файлов\"]))\n      setTimeout(() => disp(deleteAlert(alertId)), 2000)\n      return\n    }\n    disp(setIsFilesLoaded())\n    disp(addAlert([alertId, \"Загружаю файл...\"]))\n    let loadedFile = e.target.files[e.target.files.length - 1]\n    let reader = new FileReader()\n    reader.onloadend = function (e) {\n      let fileUint8Arr = new Uint8Array(e.target.result)\n      let header = \"\"\n      let arr = fileUint8Arr.subarray(0, 4)\n      for (let i = 0; i < arr.length; i++) {\n        header += arr[i].toString(16)\n      }\n      if (filesTypes[header] !== undefined) {\n        disp(setFilesInput(loadedFile))\n      }\n      disp(setIsFilesLoaded())\n      disp(updateAlert([alertId, \"Загружено\"]))\n      setTimeout(() => disp(deleteAlert(alertId)), 2000)\n    }\n    reader.readAsArrayBuffer(loadedFile)\n  }\n\n  return (\n    <div className=\"message-window__filer\">\n      <input id={props.isMovMesWindow ? \"mmw-input\" : \"header-input\"} type=\"file\" name=\"file\" className=\"message-window__filer-input\" multiple=\"\" onChange={(e) => addFiles(e)} />\n      <div className=\"message-window__filer-limits\">Макс объем: 20Mб, макс кол-во файлов: 4</div>\n      <div className=\"message-window__filer-drag-area\" onClick={() => document.getElementById(props.isMovMesWindow ? \"mmw-input\" : \"header-input\").click()}>Кликни/Брось файл/ctrl-v</div>\n      {filesInput.length > 0 &&\n        <div className=\"message-window__filer-thumbnails\">\n          {filesInput.map((elem, index) => (\n            <div key={index} className=\"filer__thumb filer__thumb_c_0\">\n              <span className=\"filer__img\">\n                {elem.name}\n              </span>\n              <button className=\"filer__delete\" onClick={() => disp(deleteFile(index))}>X</button>\n            </div>\n          ))}\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default MWFiler","import captureImg from \"../../../../assets/img/show.png\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { setCaptureInput } from '../../../../store/states/messageWindowState'\n\nfunction MWCapture() {\n    const disp = useDispatch()\n    const captureInput = useSelector(state => state.messageWindowState.captureInput)\n\n    return (\n        <div className=\"message-window__capture\">\n          <img src={captureImg} alt=\"\" />\n          <input autoComplete=\"off\" tabIndex=\"4\" type=\"text\" className=\"message-window__capture-input input\" size=\"10\" name=\"2\" placeholder=\"капча\" value={captureInput} onChange={\n            (e) => disp(setCaptureInput(e.target.value))} />\n        </div>\n    )\n}\n\nexport default MWCapture","import \"./message.scss\"\nimport MWHeader from \"./message-window-comps/mw-header/mw-header\"\nimport MWText from \"./message-window-comps/mw-text/mw-text\"\nimport MWFiler from \"./message-window-comps/mw-filer/mw-filer\"\nimport MWCapture from \"./message-window-comps/mw-capture/mw-capture\"\n\nfunction MessageWindow(props) {\n  return (\n    <div id={props.id} className=\"message-window-wr\">\n      <div className=\"message-window\">\n        <MWHeader isMessage={props.isMessage} />\n        <MWText mwId={props.id}/>\n        <MWFiler isMovMesWindow={props.isMovMesWindow} />\n        <MWCapture />\n      </div>\n    </div>\n  )\n}\n\nexport default MessageWindow","import { useState, useEffect, lazy } from 'react'\nimport { Link } from 'react-router-dom'\nimport './header.scss'\nimport { useParams } from 'react-router-dom'\nimport MessageWindow from '../message-window/MessageWindow'\n\nconst Header = () => {\n    let [messageWindowIsOpen, setMessageWindowIsOpen] = useState(false)\n\n    let path = useParams()\n    let splitPath = Object.values(path)[0].split('/')\n\n    useEffect(() => {\n        return setMessageWindowIsOpen(() => false)\n    }, [path])\n\n    function handleClick(params) {\n        document.getElementsByTagName(\"html\")[0].setAttribute('theme_data', params.target.value)\n    }\n\n    function showHideMesWindow() {\n        setMessageWindowIsOpen(!messageWindowIsOpen)\n    }\n\n    return (\n        <header className=\"header\">\n            <div className=\"container\">\n                <nav className=\"header__menu\">\n                    <Link to=\"/\" className=''>Главная</Link>\n                    <Link to=\"/price.html\" className='header__menu-link'>Реклама</Link>\n                    <Link to=\"/b/arch/\" className='header__menu-link'>Архив</Link>\n                    <Link to=\"/abu/res/42375.html\" className='header__menu-link'>API</Link>\n                    <Link to=\"/makaba/stickers/\" className='header__menu-link'>Каталог стикеров</Link>\n                </nav>\n                <nav className=\"header__menu\">\n                        <Link to=\"/\" className=\"header__menu-link\">Главная</Link>\n                        <Link to=\"/userboards.html\" className=\"header__menu-link\" title=\"Юзердоски\">Юзердоски</Link>\n                        <Link to=\"/news/catalog.html\" className=\"header__menu-link\">Каталог</Link>\n                        <Link to=\"/tracker.html\" className=\"header__menu-link\">Трекер</Link>\n                        <Link to=\"#\" className=\"header__menu-link\">NSFW</Link>\n                        <Link to=\"#\" className=\"header__menu-link\">Настройки</Link>\n                    <div className=\"selectbox\">\n                        <select onChange={(e) => handleClick(e)} defaultValue=\"\" className=\"header__color-selector select\">\n                            <option key=\"makaba\" value=\"\">Makaba</option>\n                            <option key=\"gurochan\" value=\"gurochan\">Gurochan</option>\n                            <option key=\"neutron\" value=\"neutron\">Neutron</option>\n                        </select>\n                    </div>\n                </nav>\n            </div>\n            <div className=\"header__message-window\">\n                <p className=\"header__message-window-title\">\n                    {'/' + splitPath[0] + '/'}\n                </p>\n                {messageWindowIsOpen\n                    ? <button className=\"header__message-window-btn\" onClick={() => showHideMesWindow()}>Закрыть форму постинга</button>\n                    : <div className=\"ew\">\n                        {splitPath.length > 1\n                            ? <button onClick={() => showHideMesWindow()} className=\"header__message-window-btn\">Ответить в тред</button>\n                            : <button onClick={() => showHideMesWindow()} className=\"header__message-window-btn\">Создать тред</button>\n                        }\n                    </div>\n                }\n\n                {messageWindowIsOpen && <MessageWindow isMessage={splitPath.length > 1} id=\"header-message-window\" key={\"header-message-board\"} />}\n            </div>\n        </header>\n    )\n}\n\nexport default Header\n\n","import './footer.scss'\n\nfunction AppFooter() {\n  return (\n    <div id=\"bottom\" className=\"app-footer\">\n      Все права и копирайты на этой странице принадлежат правообладателям. За любую размещенную информацию несет личную ответственность постер (лицо, загрузившее эту информацию). Все комментарии принадлежат лицам, отправившим их.\n      Если вы обнаружили информацию, размещённую против правил, пожалуйста, сообщите нам об этом.\n    </div>\n  );\n}\n\nexport default AppFooter","import './br.scss'\nimport { updateFavorite } from '../../../store/states/appState'\nimport { useDispatch } from 'react-redux'\nimport AppReq from '../../../services/axios/app'\n\nfunction BtnRefresh(props) {\n    const disp = useDispatch()\n\n    async function fetchData() {\n        console.log(props.favoriteThreads)\n        let appreq = new AppReq()\n        if (props.arr.length > 0) {\n            let threadsString = props.arr[0]\n            for (let i = 1; i < props.arr.length; i++) {\n                threadsString += \"-\" + props.arr[i]\n            }\n            threadsString += \"&lastpost=\" + props.favoriteThreads[`${props.arr[0]}`].lastpost\n            for (let i = 1; i < props.arr.length; i++) {\n                threadsString += \"-\" + props.favoriteThreads[`${props.arr[i]}`].lastpost\n            }\n            console.log(threadsString)\n            let resp = await appreq.trackerPanelCount(threadsString)\n            disp(updateFavorite(resp.data))\n        }\n    }\n\n    return (\n        <button className=\"btn-refresh btn\" onClick={fetchData}>\n            <svg className=\"svg-btn\" xmlns=\"http://www.w3.org/2000/svg\" xmlSpace=\"preserve\" width=\"14px\" height=\"14px\" version=\"1.0\" viewBox=\"0 0 14 14\">\n                <rect className=\"fil0\" width=\"14\" height=\"14\" />\n                <circle className=\"fil1 str0\" cx=\"7\" cy=\"7\" r=\"4.5\" />\n                <line className=\"fil1 str1\" x1=\"2.5\" y1=\"11.5\" x2=\"11.5\" y2=\"2.5\" />\n            </svg>\n        </button>\n    )\n}\n\nexport default BtnRefresh","import './bc.scss'\nimport { useDispatch } from 'react-redux'\nimport { addDeleteFavorite } from '../../../store/states/appState'\nfunction BtnClose(props) {\n    const disp = useDispatch()\n\n    return (\n        <button className=\"btn-close btn\" onClick={() => disp(addDeleteFavorite({threadId: props.threadId}))} >\n            <svg className='close svg-btn' xmlns=\"http://www.w3.org/2000/svg\" xmlSpace=\"preserve\" width=\"14px\" height=\"14px\" version=\"1.1\" viewBox=\"0 0 14 14\">\n                <line className=\"fil0 str0\" x1=\"2.5\" y1=\"2.5\" x2=\"11.5\" y2=\"11.5\" />\n                <line className=\"fil0 str0\" x1=\"2.5\" y1=\"11.5\" x2=\"11.5\" y2=\"2.5\" />\n            </svg>\n        </button>\n    )\n}\n\nexport default BtnClose","import './tracker.scss'\nimport BtnRefresh from \"../buttons/refresh/BtnRefresh\"\nimport BtnClose from '../buttons/close/BtnClose'\nimport { useSelector } from \"react-redux\"\nimport { useEffect } from 'react'\n\nfunction TrackerPanel() {\n    const favoriteThreads = useSelector(state => state.appState.favoriteThreads)\n    let arr = Object.keys(favoriteThreads)\n    let isTPOpen = JSON.parse(localStorage.getItem(\"trackerPanelIsOpen\")) || \"0\"\n\n\n    useEffect(() => {\n        let isReqPanel = JSON.parse(localStorage.getItem(\"TPR\")) || \"1\"\n        localStorage.setItem(\"TPR\", isReqPanel)\n    }, []);\n\n\n    function showHideTrackerPanel() {\n        if (isTPOpen === \"1\") {\n            document.getElementById(\"tracker-panel-body\").style.display = \"none\"\n            isTPOpen = \"0\"\n        } else {\n            document.getElementById(\"tracker-panel-body\").style.display = \"block\"\n            isTPOpen = \"1\"\n        }\n        localStorage.setItem(\"trackerPanelIsOpen\", isTPOpen)\n    }\n\n    return (\n        <div className=\"tracker-panel\">\n            <div className=\"tracker-panel__header\">\n                <p className=\"tracker-panel__title\" onClick={() => showHideTrackerPanel()}>Избранное</p>\n                <div className=\"tracker-panel__refresh\">\n                    <BtnRefresh arr={arr} favoriteThreads={favoriteThreads} />\n                </div>\n            </div>\n            <div style={{ display: isTPOpen === \"1\" ? \"block\" : \"none\" }} id=\"tracker-panel-body\" className=\"tracker-panel__body\">\n                {arr.length === 0\n                    ? <p className='tracker-panel__empty'>Нет тредов в избранном</p>\n                    : arr.map((elem) => (\n                        <div className='tracker-panel__favorite' key={elem}>\n                            <BtnClose threadId={elem} />\n                            {favoriteThreads[`${elem}`].newPostsCount >= 0 && <p className='tracker-panel__qwe'>({favoriteThreads[`${elem}`].newPostsCount})</p>}\n                            <p className='tracker-panel__favorite-title'>{favoriteThreads[`${elem}`].postTitle}</p>\n                        </div>\n                    ))\n                }\n            </div>\n            <div className=\"tracker-panel__footer\"></div>\n        </div>\n    )\n}\n\nexport default TrackerPanel","import './pm.scss'\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { showMovMessageWindow } from '../../../../store/states/messageWindowState'\nimport { hidePost } from '../../../../store/states/appState'\n\nfunction PostMenu() {\n    const disp = useDispatch()\n    const coor = useSelector(state => state.postMenuState.postMenuCoor)\n    const postId = useSelector(state => state.postMenuState.postId)\n    const threadId = useSelector(state => state.postMenuState.threadId)\n    //репорт не работает по причине отсутствия админки\n    return (\n        <div style={{top: coor[0], left: coor[1]}} className=\"post-menu\">\n            <button className=\"post-menu__btn\" onClick={() => disp(showMovMessageWindow([postId, threadId]))}>Ответить</button>\n            <button className=\"post-menu__btn\" onClick={() => disp(hidePost(postId))}>Скрыть</button>\n            <button className=\"post-menu__btn\" onClick={() => alert(\"Мамке своей пожалуйся азаза\")}>Зарепортить</button>\n        </div>\n    )\n}\n\nexport default PostMenu;","import './bhb.scss'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { asideSwitcher } from '../../../../store/states/appState'\n\nfunction BoardHeaderBtn() {\n    const asideIsOpen = useSelector(state => state.appState.asideIsOpen)\n    const dispatch = useDispatch()\n    \n    return (\n        <button className='board-header__close-btn link-color' onClick={() => dispatch(asideSwitcher())} >\n            {asideIsOpen ? \"<<\" : \">>\"}\n        </button>\n    );\n}\n\nexport default BoardHeaderBtn","import \"./bh.scss\"\nimport { useParams, useNavigate } from 'react-router-dom'\nimport { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateThread } from '../../../store/states/appState'\nimport BoardHeaderBtn from './board-header-btn/BoardHeaderBtn'\nimport AppReq from '../../../services/axios/app'\n\nfunction BoardHeader() {\n    const navigate = useNavigate()\n    const disp = useDispatch()\n    const [seconds, setSeconds] = useState(15)\n    const [timerActive, setTimerActive] = useState(false)\n    const [timerId, setTimerId] = useState()\n    const thread = useSelector(state => state.appState.thread)\n    let splitPath = Object.values(useParams())[0].split('/')\n    let counter = 15\n    \n    function timer() {\n        let timerId = setTimeout(async () => {\n            console.log(seconds)\n            if (counter === 1) {\n                setSeconds((sec) => sec = \"выполняется...\")\n                await refreshThread()\n                setSeconds((sec) => sec = 15)\n                counter = 15\n                setTimerId(timer())\n            } else {\n                setSeconds((sec) => sec - 1)\n                counter -= 1\n                setTimerId(timer())\n            }\n        }, 1000)\n        return timerId\n    }\n    \n    async function refreshThread() {\n        let resp = new AppReq()\n        disp(updateThread(await resp.refreshThread(splitPath[1], thread[thread.length - 1].id)))\n    }\n\n    function autorefresh() {\n        if (timerActive) {\n            clearInterval(timerId)\n            setTimerActive((bool) => bool = false)\n            setSeconds((sec) => sec = 15)\n            counter = 15\n        } else {\n            setTimerActive((bool) => bool = true)\n            setTimerId(timer())\n        }\n    }\n\n    useEffect(() => {\n        return () => { clearInterval(timerId) }\n    }, [])\n\n    return (\n        <div className=\"board-header\">\n            <div className=\"ew\">\n                {splitPath.length > 1\n                    ? <div className=\"board-header\">\n                        <BoardHeaderBtn />\n                        <a onClick={() => navigate(-1)}>Назад</a>|\n                        <a href=\"#bottom\">Вниз</a>|\n                        <a href=\"/b/catalog.html\" className=\"desktop\" target=\"_blank\">Каталог</a>|\n                        <a onClick={refreshThread} className=\"postbtn-update\">Обновить тред</a>|\n                        <span className=\"autorefresh\">\n                            <input type=\"checkbox\" className=\"autorefresh-checkbox\" onClick={autorefresh} /> Автообновление {timerActive && <>через {seconds}</>}<span className=\"autorefresh-countdown\"></span>\n                        </span>\n                    </div>\n                    : <div className=\"board-header\">\n                        <BoardHeaderBtn />\n                        <a href=\"/b/catalog.html\" className=\"catalog\" target=\"_blank\">Каталог</a>\n                    </div>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default BoardHeader","import { useEffect } from 'react'\nimport './spb.scss'\n\nfunction ScrollPageBtns() {\n    let scrollBtns = document.getElementsByClassName(\"scroll-page-btn\")\n\n    function showHideBtns(e) {\n        if (window.pageYOffset === 0) {\n            scrollBtns[0].style.display = \"none\"\n        } else {\n            scrollBtns[0].style.display = \"block\"\n        }\n\n        let limit = Math.max(document.body.scrollHeight, document.body.offsetHeight,\n            document.documentElement.clientHeight, document.documentElement.scrollHeight, document.documentElement.offsetHeight)\n\n        if (window.pageYOffset + window.screen.height > limit) {\n            scrollBtns[1].style.display = \"none\"\n        } else {\n            scrollBtns[1].style.display = \"block\"\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener(\"scroll\", showHideBtns)\n\n        return () => {\n            window.removeEventListener(\"scroll\", showHideBtns)\n        }\n    }, [])\n\n    function scrollTo(params) {\n        if (params === 0) {\n            window.scroll(0, 0)\n        } else {\n            window.scroll(0, document.body.scrollHeight)\n        }\n    }\n\n    return (\n        <>\n            <button className=\"scroll-page-btn first\" onClick={() => scrollTo(0)}>\n                <svg className='spb-svg' xmlns=\"http://www.w3.org/2000/svg\" xmlSpace=\"preserve\" width=\"16px\" height=\"16px\" version=\"1.0\" viewBox=\"0 0 16 16\">\n                    <g id=\"Слой_x0020_1\">\n                        <g id=\"_1945697039936\">\n                            <g>\n                                <path className=\"path\" d=\"M0.154 2.587c-0.306,-0.46 -0.182,-1.081 0.277,-1.387 0.46,-0.307 1.081,-0.183 1.387,0.277l-1.664 1.11zm7.333 10.999l-7.333 -10.999 1.664 -1.11 7.333 10.999 -1.664 1.11zm1.664 -1.11c0.306,0.46 0.182,1.081 -0.277,1.387 -0.46,0.306 -1.081,0.182 -1.387,-0.277l1.664 -1.11z\" />\n                            </g>\n                        </g>\n                        <g id=\"_1945697039072\">\n                            <g>\n                                <path className=\"path\" d=\"M14.123 1.455c0.284,-0.473 0.899,-0.625 1.372,-0.341 0.474,0.285 0.626,0.9 0.341,1.373l-1.713 -1.032zm-6.661 11.06l6.661 -11.06 1.713 1.032 -6.66 11.06 -1.714 -1.032zm1.714 1.032c-0.285,0.473 -0.9,0.625 -1.373,0.341 -0.473,-0.285 -0.625,-0.9 -0.341,-1.373l1.714 1.032z\" />\n                            </g>\n                        </g>\n                    </g>\n                </svg>\n            </button>\n            <button className=\"scroll-page-btn second\" onClick={() => scrollTo(1)}>\n                <svg className='spb-svg' xmlns=\"http://www.w3.org/2000/svg\" xmlSpace=\"preserve\" width=\"16px\" height=\"16px\" version=\"1.0\" viewBox=\"0 0 16 16\">\n                    <g id=\"Слой_x0020_1\">\n                        <g id=\"_1945697039936\">\n                            <g>\n                                <path className=\"path\" d=\"M0.154 2.587c-0.306,-0.46 -0.182,-1.081 0.277,-1.387 0.46,-0.307 1.081,-0.183 1.387,0.277l-1.664 1.11zm7.333 10.999l-7.333 -10.999 1.664 -1.11 7.333 10.999 -1.664 1.11zm1.664 -1.11c0.306,0.46 0.182,1.081 -0.277,1.387 -0.46,0.306 -1.081,0.182 -1.387,-0.277l1.664 -1.11z\" />\n                            </g>\n                        </g>\n                        <g id=\"_1945697039072\">\n                            <g>\n                                <path className=\"path\" d=\"M14.123 1.455c0.284,-0.473 0.899,-0.625 1.372,-0.341 0.474,0.285 0.626,0.9 0.341,1.373l-1.713 -1.032zm-6.661 11.06l6.661 -11.06 1.713 1.032 -6.66 11.06 -1.714 -1.032zm1.714 1.032c-0.285,0.473 -0.9,0.625 -1.373,0.341 -0.473,-0.285 -0.625,-0.9 -0.341,-1.373l1.714 1.032z\" />\n                            </g>\n                        </g>\n                    </g>\n                </svg>\n            </button>\n        </>\n    )\n}\n\nexport default ScrollPageBtns","import { useEffect } from \"react\"\nimport \"./d.scss\"\n\nfunction Draggable(props) {\n    let isMouseDown = false\n    let cx, cy, _px, _py, _x, _y\n    let elem\n\n    function move(e) {\n        if (isMouseDown) {\n            cx = e.clientX\n            cy = e.clientY\n            let cr = elem.getBoundingClientRect()\n            let x = cr.left + cx - _px\n            let y = cr.top + cy - _py\n            _x = `left: ${x}px`\n            _y = `top: ${y}px`\n            elem.style.cssText += `; ${_x}; ${_y};`\n            _px = cx\n            _py = cy\n        }\n    }\n\n    function mouseDown(e) {\n        elem = document.getElementById(\"draggable\")\n        if (props.handle) {\n            if (props.handle !== e.target.id) {\n                return\n            }\n        }\n        cx = e.clientX\n        cy = e.clientY\n        _px = cx\n        _py = cy\n        isMouseDown = true\n    }\n\n    function mouseUp(e) {\n        isMouseDown = false\n    }\n\n    return (\n        <div id=\"draggable\" className=\"draggable\" onMouseDown={(e) => mouseDown(e)} onMouseMove={(e) => move(e)} onMouseUp={(e) => mouseUp(e)}>\n            {props.children}\n        </div>\n    )\n}\n\nexport default Draggable","import \"./mv.scss\"\nimport Draggable from \"../draggable/Draggable\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { mvSetLink } from \"../../store/states/mediaViewState\"\nimport { useEffect, useState } from \"react\"\n\nfunction MovMediaBoard() {\n    const disp = useDispatch()\n    const fileName = useSelector(state => state.mediaViewState.mvLink)\n    const [data, setData] = useState({ display: \"none\", width: \"200px\", height: \"200px\" })\n    let mediaHeight\n    let mediaWidth\n    let W_WIDTH = document.documentElement.clientWidth\n    let W_HEIGHT = document.documentElement.clientHeight\n    let scale = 1\n    let isMoved = false\n    let isMouseDown = false\n\n    function fileType() {\n        let src = 'http://localhost:7000/files/'\n        let type = fileName.split(\".\")\n        if (type[1] === \"mp4\" || type[1] === \"webm\" || type[1] === \"gif\") {\n            return (\n                <video src={src + fileName} style={data} onLoadedData={(e) => onLoadHandler(e)} controls={true} autoPlay loop />\n            )\n        } else {\n            return (\n                <img id=\"image\" style={data} src={src + fileName} onLoad={(e) => onLoadHandler(e)} />\n            )\n        }\n    }\n\n    function onWheelHandler(e) {\n        e.preventDefault()\n        e.stopPropagation()\n        if (e.deltaY < 0 && scale < 3) {\n            scale += 0.2\n        } else if (e.deltaY > 0 && scale > 0.4) {\n            scale -= 0.2\n        }\n        document.getElementById(\"draggable\").style.transform = `scale(${scale})`\n    }\n\n\n    function onLoadHandler(e) {\n        mediaWidth = e.target.naturalWidth || e.target.videoWidth\n        mediaHeight = e.target.naturalHeight || e.target.videoHeight\n        if (mediaWidth > W_WIDTH || mediaHeight > W_HEIGHT) {\n            let mult = 1\n            let multW = Math.round((W_WIDTH - 8 * 2) / mediaWidth * 100) / 100 // 8 - border\n            let multH = Math.round((W_HEIGHT - 8 * 2) / mediaHeight * 100) / 100\n            if (multW < 0.1) multW = 0.1\n            if (multH < 0.1) multH = 0.1\n            mult = multW < multH ? multW : multH\n            let width = Math.round(mediaWidth * mult)\n            let height = Math.round(mediaHeight * mult)\n            document.getElementById(\"draggable\").style.left = `${Math.round((W_WIDTH - width) / 2)}px`\n            document.getElementById(\"draggable\").style.top = `${Math.round((W_HEIGHT - height) / 2)}px`\n\n            setData({\n                display: \"block\",\n                width: width,\n                height: height\n            })\n        } else {\n            document.getElementById(\"draggable\").style.left = `${Math.round((W_WIDTH - mediaWidth) / 2)}px`\n            document.getElementById(\"draggable\").style.top = `${Math.round((W_HEIGHT - mediaHeight) / 2)}px`\n            setData({\n                display: \"block\",\n                width: mediaWidth,\n                height: mediaHeight\n            })\n        }\n    }\n\n\n    useEffect(() => {\n        document.getElementById(\"draggable\").addEventListener(\"wheel\", onWheelHandler, { passive: false })\n    }, [fileName])\n\n    return (\n        <Draggable>\n            <div style={{ display: data.display }} id=\"mv\" className=\"mv\"\n                onMouseDown={() => isMouseDown = true}\n                onMouseMove={(e) => { if (isMouseDown) isMoved = true }}\n                onClick={(e) => {\n                    e.preventDefault(); e.stopPropagation();\n                    if (!isMoved) { disp(mvSetLink(\"\")) }\n                    else { isMouseDown = false; isMoved = false }\n                }}>\n                <p className=\"mv__title\">{fileName}</p>\n                {fileType()}\n            </div>\n        </Draggable>\n    )\n}\n\nexport default MovMediaBoard","import { useState } from \"react\"\nimport \"./mwm.scss\"\nimport MessageWindow from \"../MessageWindow\"\nimport Draggable from \"../../draggable/Draggable\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { hideMovMessageWindow, setMovPos } from '../../../store/states/messageWindowState'\n\nfunction MessageWindowMovable() {\n    const [position, setPosition] = useState()\n    const disp = useDispatch()\n\n    const trackPos = (data) => {\n        setPosition({ x: data.x, y: data.y })\n    }\n/*\n    useEffect(() => {\n        document.getElementById(\"draggable\").style.left = `${oldPos.x}px`\n        document.getElementById(\"draggable\").style.top = `${oldPos.y}px`\n    }, [])\n*/\n    return (\n        <Draggable handle=\"movable-message-window__header\">\n            <div id=\"movable-message-window\" className=\"movable-message-window\">\n                <div id=\"movable-message-window__header\" className=\"movable-message-window__header\">\n                    Ответить в тред\n                    <button className=\"movable-message-window__closebtn\" onClick={() => disp(hideMovMessageWindow())}>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" xmlSpace=\"preserve\" width=\"14px\" height=\"14px\" version=\"1.1\"\n                            viewBox=\"0 0 14 14\">\n                            <rect className=\"fil0\" width=\"14\" height=\"14\" />\n                            <line className=\"fil1 str0\" x1=\"2.5\" y1=\"2.5\" x2=\"11.5\" y2=\"11.5\" />\n                            <line className=\"fil1 str0\" x1=\"11.5\" y1=\"2.5\" x2=\"2.5\" y2=\"11.5\" />\n                        </svg>\n                    </button>\n                </div>\n                <MessageWindow isMessage={true} isMovMesWindow={true} />\n            </div>\n        </Draggable>\n    )\n}\n\nexport default MessageWindowMovable","import \"./a.scss\"\n\nfunction Alerts(props) { \n    return (\n      <div className=\"alerts\">\n          <p>{props.text}</p>\n      </div>\n    );\n  }\n  \n  export default Alerts","import { useSelector } from 'react-redux'\nimport Alerts from '../../alerts/Alerts'\nimport './acont.scss'\nconst AlertsCont = (() => {\n    const alerts = useSelector(state => state.alertsState.alertsList)\n    let arr = Object.keys(alerts)\n    \n    return (\n        <div className='acont'>\n            {arr &&\n                arr.map((elem) => (\n                    <Alerts key={elem} text={alerts[elem]}/>\n                ))\n            }\n        </div>\n    )\n})\n\nexport default AlertsCont","import './board.scss'\nimport { Outlet } from \"react-router-dom\"\nimport AsideMenu from \"../../components/aside-menu/AsideMenu\"\nimport AppHeader from \"../../components/header/AppHeader\"\nimport AppFooter from \"../../components/footer/AppFooter\"\nimport Tracker from \"../../components/tracker/TrackerPanel\"\nimport PostMenu from '../../components/buttons/triangle/post-menu/PostMenu'\nimport BoardHeader from '../../components/board/board-header/BoardHeader'\nimport ScrollPageBtns from '../../components/buttons/scroll-page-btns/ScrollPageBtns'\nimport MediaView from '../../components/media-view/MediaView'\nimport MessageWindowMovable from '../../components/message-window/message-window-movable/MessageWindowMovable'\nimport AlertsCont from '../../components/containers/alerts-cont/AlertsCont'\nimport { mvSetLink } from '../../store/states/mediaViewState'\nimport { hidePostMenu } from '../../store/states/postMenuState'\nimport { useDispatch, useSelector } from 'react-redux'\n\nfunction Board() {\n  const postMenuIsOpen = useSelector(state => state.postMenuState.postMenuIsOpen)\n  const movMessageWindowIsOpen = useSelector(state => state.messageWindowState.movMessageWindowisOpen)\n  const mediaFileName = useSelector(state => state.mediaViewState.mvLink)\n  const disp = useDispatch()\n\n  function closeAll() {\n    if (postMenuIsOpen) disp(hidePostMenu())\n    if (mediaFileName) disp(mvSetLink(\"\"))\n  }\n\n  return (\n    <div className=\"wr\" onClick={() => closeAll()}>\n      {mediaFileName && <MediaView />}\n      {movMessageWindowIsOpen && <MessageWindowMovable />}\n      <ScrollPageBtns />\n      <div className=\"container\">\n        <AlertsCont />\n        <div className=\"board\" id='board'>\n          <AppHeader />\n          <div className=\"board__inner\">\n            <AsideMenu />\n            <div className=\"board__wr\">\n              <BoardHeader />\n              <Outlet />\n              <AppFooter />\n            </div>\n          </div>\n          <Tracker />\n        </div>\n        {postMenuIsOpen && <PostMenu />}\n      </div>\n    </div>\n  )\n}\n\nexport default Board\n"],"names":["axios","config","method","console","log","error","Promise","reject","request","itemUrl","data","response","url","AppReq","boardName","offset","limit","params","replace","items","id","item","lastPost","posts","post","message","mediaFiles","length","formData","FormData","append","JSON","stringify","forEach","element","name","headers","threads","resp","threadId","asideIsOpen","useSelector","state","appState","asideInnerState","parse","localStorage","getItem","showHide","pointer","elem","document","getElementsByClassName","children","setItem","elemStyle","getComputedStyle","display","style","className","onClick","to","props","path","useParams","navigation","useNavigate","disp","useDispatch","captureAnswer","splitPath","Object","values","split","optionInput","messageWindowState","filesInput","textInput","captureInput","createPostOrThread","req","userName","ThreadId","text","IP","alertId","addAlert","isMessage","status","updateAlert","sessionStorage","setTextInput","clearFilesInput","setTimeout","deleteAlert","autoComplete","type","size","placeholder","value","onChange","e","setOptionInput","target","submitHandler","doAddTags","tag1","tag2","ToolbarTextarea","getElementById","mwId","selection","sel","createRange","len","start","selectionStart","end","selectionEnd","scrollTop","scrollLeft","rep","substring","focus","setSelectionRange","dispatchEvent","Event","tabIndex","rows","filesIsLoaded","isFilesLoaded","filesTypes","setIsFilesLoaded","loadedFile","files","reader","FileReader","onloadend","header","arr","Uint8Array","result","subarray","i","toString","undefined","setFilesInput","readAsArrayBuffer","isMovMesWindow","multiple","addFiles","click","map","index","deleteFile","src","captureImg","alt","setCaptureInput","useState","messageWindowIsOpen","setMessageWindowIsOpen","showHideMesWindow","useEffect","title","getElementsByTagName","setAttribute","defaultValue","favoriteThreads","appreq","threadsString","lastpost","trackerPanelCount","updateFavorite","xmlns","xmlSpace","width","height","version","viewBox","cx","cy","r","x1","y1","x2","y2","addDeleteFavorite","keys","isTPOpen","isReqPanel","newPostsCount","postTitle","coor","postMenuState","postMenuCoor","postId","top","left","showMovMessageWindow","hidePost","alert","dispatch","asideSwitcher","navigate","seconds","setSeconds","timerActive","setTimerActive","timerId","setTimerId","thread","counter","timer","sec","refreshThread","updateThread","clearInterval","href","bool","scrollBtns","showHideBtns","window","pageYOffset","Math","max","body","scrollHeight","offsetHeight","documentElement","clientHeight","screen","scrollTo","scroll","addEventListener","removeEventListener","d","_px","_py","_x","_y","isMouseDown","onMouseDown","handle","clientX","clientY","mouseDown","onMouseMove","cr","getBoundingClientRect","x","y","cssText","move","onMouseUp","mediaHeight","mediaWidth","fileName","mediaViewState","mvLink","setData","W_WIDTH","clientWidth","W_HEIGHT","scale","isMoved","onWheelHandler","preventDefault","stopPropagation","deltaY","transform","onLoadHandler","naturalWidth","videoWidth","naturalHeight","videoHeight","mult","multW","round","multH","passive","mvSetLink","onLoadedData","controls","autoPlay","loop","onLoad","fileType","hideMovMessageWindow","alerts","alertsState","alertsList","postMenuIsOpen","movMessageWindowIsOpen","movMessageWindowisOpen","mediaFileName","hidePostMenu","MediaView","AppHeader"],"sourceRoot":""}